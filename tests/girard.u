
let false = ∀ (\phi: *). \phi in

let neg = λ \phi: *. \phi -> false in

let U = ∀ ξ : [].(((ξ -> *) -> *) -> ξ) -> ((ξ -> *) -> *) in

let PU = (U -> *) in

let PPU = ((U -> *) -> *) in 

let τ = 
  λ (t : PPU). 
    λ ξ : []. 
      λ f : ((ξ -> *) -> *) -> ξ.
        λ p : (ξ -> *).
          t λ x: U. (p (f (x ξ f))) in

let σ = 
  λ s: U. s U λ t: PPU. τ t in

let δ = 
  λ y: U. neg ∀ p: PU. (σ y p) -> (p (τ (σ y))) in

let ω = 
  τ λ p: PU. ∀ x: U. (σ x p) -> (p x) in

(λ 0: ∀ p: PU. ∀ x: U.( ((σ x p) -> (p x)) -> (p ω)).
  (
    (
      (0 δ)
      λ x: U. 
        λ 2: σ x δ.
          λ 3: ∀ p: PU. ( (σ x p) -> (p(τ (σ x))) ).
            (
              ( (3 δ) 2 ) 
              λ p: PU. (3 λ y: U. p (τ (σ y) ))
            )
    )
    λ p: PU. (0 λ y: U. (p (τ (σ y))) ) 
  )
  λ p: PU.
    λ 1: ∀ x: U. ( ((σ x) p) -> (p x) ).
      (
        (1 ω)
        λ x: U. (1 (τ (σ )))
      )
)
          
